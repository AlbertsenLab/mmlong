#!/bin/bash
# mmlong bin-reassembly workflow
# By Rasmus Kirkegaard and SÃ¸ren Karst
VERSION=1.0.7

################################################################################
### Preparation ----------------------------------------------------------------
################################################################################

### Description ----------------------------------------------------------------

USAGE="$(basename "$0") [-h] [-n file -i file -b folder -d folder -m folder -t value -x] 
-- mmlong reassembly workflow v. $VERSION: Based on binned scaffolds recruit reads and perform Unicycler reassembly.

where:
    -h  Show this help text.
    -n  List of prefixes for Nanopore data files to be used for assembly.
        The file names follow the format: \"prefix_nptrim.fq\".
        Default: ./np_asmb.txt.
    -i  List of prefixes for Illumina interleaved PE data files to be used
        for assembly. The file names follow the format: \"prefix_ilmtrim.fq\".
        Default: ./ilm_asmb.txt.
    -b  Folder containing bins in fasta format. Default: ./binning/bins .
    -d  Folder containing trimmed reads.
        Default: ./trimmed_data .
    -m  Folder containing mapped reads. Default: ./metagenome_mapping .
    -t  Number of threads to use. Default: 10.
    -x  Run pipeline on test data.

Requirements:

"

### Terminal Arguments ---------------------------------------------------------

# Import user arguments
while getopts ':hzn:i:b:d:m:t:x' OPTION; do
  case $OPTION in
    h) echo "$USAGE"; exit 1;;
    n) NP_ASMB=`cat $OPTARG`;;
    i) ILM_ASMB=`cat $OPTARG`;;
    b) BIN_DIR=$OPTARG;;
    d) TRIM_DIR=$OPTARG;;
    m) MAP_DIR=$OPTARG;;
    t) THREADS=$OPTARG;;
    x) NP_ASMB=`cat ./np_asmb.txt`;ILM_ASMB=`cat ./ilm_asmb.txt`;\
       BIN_DIR=./binning/bins; TRIM_DIR=./trimmed_data; MAP_DIR=./metagenome_mapping;\
       THREADS=40;;
    :) printf "missing argument for -$OPTARG\n" >&2; exit 1;;
    \?) printf "invalid option for -$OPTARG\n" >&2; exit 1;;
  esac
done

### Check missing arguments
MISSING="is missing but required. Exiting."
if [ -z ${NP_ASMB+x} ]; then NP_ASMB=`cat ./np_asmb.txt`; fi;
if [ -z ${ILM_ASMB+x} ]; then ILM_ASMB=`cat ./ilm_asmb.txt`; fi;
if [ -z ${BIN_DIR+x} ]; then BIN_DIR=./binning/bins; fi;
if [ -z ${TRIM_DIR+x} ]; then TRIM_DIR=./trimmed_data; fi;
if [ -z ${MAP_DIR+x} ]; then MAP_DIR=./metagenome_mapping; fi;
if [ -z ${THREADS+x} ]; then THREADS=10; fi;

### Path to dependencies
. $MMLONG_DIR/mmlong_tools/dependencies.sh

################################################################################
### Log settings ---------------------------------------------------------------
################################################################################

  LOG_PATH="mmlong_reassembly_log_$(date +%s).txt"
  echo "mmlong reassembly workflow log" > $LOG_PATH
  echo "Script start: $(date)" >> $LOG_PATH
  echo "Settings:
  Script version: 	$VERSION
  Script call: 		$0 $*
  Nanopore asmb list:	$NP_ASMB
  Illumina asmb list:	$ILM_ASMB
  Bins folder:		$BIN_DIR
  Trimmed reads folder: $TRIM_DIR
  Mapped reads folder:	$MAP_DIR
  CPU threads:		$THREADS" >> $LOG_PATH
  exec > >(tee -a $LOG_PATH)
  exec 2>&1 

################################################################################
### Workflow -------------------------------------------------------------------
################################################################################

### Read recruitment -----------------------------------------------------------
mkdir -p reassembly
# Prepare bin folders
for BIN_PATH in $BIN_DIR/*.fa*
do
  BIN_NAME=`basename "$BIN_PATH" | sed 's/\..*$//g'`
  if [ ! -d "reassembly/$BIN_NAME" ]; then
    # Create bin reassembly folders
    mkdir reassembly/$BIN_NAME
    mkdir reassembly/$BIN_NAME/data
    printf "\n# Read recruitment for [$BIN_NAME]  -------------------------\n\n"
    # Transfer bin  
    cp $BIN_PATH reassembly/$BIN_NAME/${BIN_NAME}_massembly.fa
    grep ">" $BIN_PATH | tr -d ">" |  tr -d '\15\32' \
    > reassembly/$BIN_NAME/scaffold.list
    # Prepare data stats file
    echo "data, total_bp, estimated_coverage" > reassembly/$BIN_NAME/data_stats.txt
    # Extract Illumina reads
    for ILM_NAME in $(echo "$ILM_ASMB")
    do
      printf "\nRecruiting Illumina reads to [$BIN_NAME] from [$ILM_NAME]\n\n"
      # Detect reads mapped to bin
      IR=`$SAMTOOLS view -@ $THREADS -F 0x104 $MAP_DIR/${ILM_NAME}_cov.bam |\
      awk 'NR==FNR{a[$0];next}$3 in a{print $1}' reassembly/$BIN_NAME/scaffold.list - |\
      sort | uniq`
      # Extract PE read
      LC_ALL=C grep -Fwf <(echo "$IR") -A 3 $TRIM_DIR/${ILM_NAME}_ilmtrim.fq | \
      sed '/^--$/d' | paste - - - - - - - -  | tee >(cut -f 1-4 |\
      tr "\t" "\n" > reassembly/$BIN_NAME/data/${ILM_NAME}_ilmtrim_R1.fq) |\
      cut -f 5-8 | tr "\t" "\n" > reassembly/$BIN_NAME/data/${ILM_NAME}_ilmtrim_R2.fq      
      # Data stats
      DATA_BP=`cat reassembly/$BIN_NAME/data/${ILM_NAME}_ilmtrim_R1.fq \
      reassembly/$BIN_NAME/data/${ILM_NAME}_ilmtrim_R2.fq |\
      paste - - - - | cut -f 2 | tr -d '\n' | wc -c`
      ASMB_BP=`grep -v ">" reassembly/$BIN_NAME/${BIN_NAME}_massembly.fa  | tr -d '\n\15\32' | \
      wc -c`
      echo "$ILM_NAME, $DATA_BP, $((DATA_BP / ASMB_BP))" >> reassembly/$BIN_NAME/data_stats.txt    
    done 
    
    # Extract Nanopore reads
    for NP_NAME in $(echo "$NP_ASMB") 
    do
      printf "\nRecruiting Nanopore reads to [$BIN_NAME] from [$NP_NAME]\n\n"
      IR=`$SAMTOOLS view -@ $THREADS -F 0x104 $MAP_DIR/${NP_NAME}_cov.bam |\
      awk 'NR==FNR{a[$0];next}$3 in a{print $1}' reassembly/$BIN_NAME/scaffold.list - |\
      sort | uniq`
      LC_ALL=C grep -Fwf <(echo "$IR") -A 3 $TRIM_DIR/${NP_NAME}_nptrim.fq | \
      sed '/^--$/d' > reassembly/$BIN_NAME/data/${NP_NAME}_subset_nptrim.fq
      # Data stats
      DATA_BP=`cat reassembly/$BIN_NAME/data/${NP_NAME}_subset_nptrim.fq | paste - - - - | \
      cut -f 2 | tr -d '\n' | wc -c`
      ASMB_BP=`grep -v ">" reassembly/$BIN_NAME/${BIN_NAME}_massembly.fa  | tr -d '\n\15\32' | \
      wc -c`
      echo "$NP_NAME, $DATA_BP, $((DATA_BP / ASMB_BP))" >> reassembly/$BIN_NAME/data_stats.txt  
    done
  fi
done

### Reassembly -----------------------------------------------------------------
printf "\n# Reassembly using Unicycler -----------------------------------\n\n"
for BIN_PATH in reassembly/*
do  
  BIN_NAME=`basename "$BIN_PATH" | sed 's/\..*$//g'`
  ASMBS="$BIN_PATH/*_massembly.fa"
  mkdir $BIN_PATH/all_assembly
  for ILM_NAME in $(echo "$ILM_ASMB")
  do
    for NP_NAME in $(echo "$NP_ASMB") 
    do
      printf "\nReassembling [$BIN_NAME] using [$ILM_NAME] and [$NP_NAME]\n\n"
      ASMB_NAME=U+${BIN_NAME}+${NP_NAME}+${ILM_NAME}
      ASMBS="$ASMBS $BIN_PATH/all_assembly/${ASMB_NAME}_assembly.fa"
      if [ ! -d "$BIN_PATH/$ASMB_NAME" ]; then
        # de novo assembly
        mkdir $BIN_PATH/$ASMB_NAME
        $UNICYCLER -1 $BIN_PATH/data/${ILM_NAME}_ilmtrim_R1.fq \
        -2 $BIN_PATH/data/${ILM_NAME}_ilmtrim_R2.fq \
        -l $BIN_PATH/data/${NP_NAME}_subset_nptrim.fq --threads $THREADS \
        --spades_path $SPADES --no_correct --min_kmer_frac 0.3 --kmer_count 3 \
        --no_pilon --racon_path $RACON --keep 3 -o $BIN_PATH/$ASMB_NAME
        # Format and move assemblies
        cp $BIN_PATH/$ASMB_NAME/assembly.fasta \
        $BIN_PATH/${ASMB_NAME}_assembly.fa
        find $BIN_PATH/$ASMB_NAME/ -type f -iname "*.gfa" -exec \
        awk -v path="$BIN_PATH/all_assembly/" -v asmb_name="$ASMB_NAME" '
          FNR==1 {out=FILENAME; sub(".*/", "", out); sub(/\.[^.]*$/, "", out)}
          /^S/{print ">"$2"\n"$3 >(path asmb_name "_" out ".fa")}
        ' {} +
      fi       
    done
  done
  # Assembly stats
  if [ ! -d "$BIN_PATH/quast_stats" ]; then
    $QUAST $BIN_PATH/all_assembly/$ASMBS -o $BIN_PATH/quast_stats -R $BIN_PATH/*_massembly.fa
  fi
done

################################################################################
### Exit -----------------------------------------------------------------------
################################################################################
printf "\n##### Processing done $(date) #####\n\n"
exit 0

################################################################################
### Testing --------------------------------------------------------------------
################################################################################
NP_ASMB=`cat ./np_asmb.txt`;
ILM_ASMB=`cat ./ilm_asmb.txt`;
BIN_DIR=./binning/bins;
TRIM_DIR=./trimmed_data;
MAP_DIR=./metagenome_mapping;
THREADS=40;
NP_ASMB_NAME=`echo "$NP_ASMB" | sed 's/\..*$//g'`
ILM_ASMB_NAME=`echo "$ILM_ASMB" | sed 's/[12]\..*$//g' | sort | uniq`



